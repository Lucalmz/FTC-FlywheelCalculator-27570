name: Java CI with Maven and jpackage

# 触发条件：当一个以 "v" 开头的标签 (如 v1.0, v1.1.0) 被推送到仓库时
on:
  push:
    tags:
      - 'v*'

jobs:
  # --- 构建任务 (合并了Windows和macOS的公共部分) ---
  build:
    # 使用矩阵策略，同时在Windows和macOS上运行
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    runs-on: ${{ matrix.os }} # 使用矩阵中定义的操作系统

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        # ！！！关键修复 1：
        # 我们在这里不仅执行打包，还把最终生成的 JAR 文件名保存到一个环境变量中
        # 这样就不需要在后面的步骤中写死文件名了
        run: |
          mvn -B package --file pom.xml
          echo "JAR_NAME=$(ls target/*.jar | xargs -n 1 basename)" >> $GITHUB_ENV
        shell: bash

      - name: Display JAR name (for debugging)
        run: echo "The built jar is ${{ env.JAR_NAME }}"

      # --- Windows 打包步骤 ---
      - name: Run jpackage for Windows
        if: runner.os == 'Windows'
        run: |
          jpackage --name "FlywheelCalculator" `
                   --input target/ `
                   --main-jar ${{ env.JAR_NAME }} `
                   --main-class com.bear27570.flywheelcalculator.MainApp `
                   --type exe `
                   --dest build/ `
                   --icon packaging/icon.ico `
                   --app-version ${{ github.ref_name }} `
                   --win-console `
                   --java-options "-Dfile.encoding=UTF-8"

      # --- macOS 打包步骤 ---
      - name: Run jpackage for macOS
        if: runner.os == 'macOS'
        run: |
          jpackage --name "FlywheelCalculator" \
                   --input target/ \
                   --main-jar ${{ env.JAR_NAME }} \
                   --main-class com.bear27570.flywheelcalculator.MainApp \
                   --type dmg \
                   --dest build/ \
                   --icon packaging/icon.icns \
                   --app-version ${{ github.ref_name }} \
                   --java-options "-Dfile.encoding=UTF-8"

      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          # ！！！关键修复 2：
          # 为构建产物命名时加入操作系统信息，使其唯一
          name: ${{ runner.os }}-Installer
          # 动态查找生成的文件路径
          path: |
            build/FlywheelCalculator.dmg
            build/FlywheelCalculator/FlywheelCalculator.exe
          if-no-files-found: error # 如果没找到文件，就让工作流失败